% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/Calendar.R
\name{Calendar}
\alias{Calendar}
\title{Creates a calendar}
\usage{
Calendar(holidays = integer(0), startDate = "2005-01-01",
  endDate = "2015-12-31", pattern = c("\%Y-\%m-\%d", "\%Y\%m\%d"),
  name = "gregorian", dib = NULL)
}
\arguments{
\item{holidays}{a vector of Dates which contains the holidays}

\item{name}{calendar's name}

\item{dib}{a single numeric variable which indicates the amount of days
within a year (\code{dib} stands for days in base).}

\item{start.date}{the date which the calendar starts}

\item{end.date}{the date which the calendar ends}
}
\description{
The \code{Calendar} stores all information necessary to compute business days.
This works like a helper class for many of \code{bizdays}' methods.
}
\details{
The arguments \code{start.date} and \code{end.date} can be set but once they aren't and \code{holidays}
is set, \code{start.date} is defined to \code{min(holidays)} and \code{end.date} to \code{max(holidays)}.
If holidays isn't set \code{start.date} is set to \code{'1970-01-01'} and \code{end.date} to \code{'2071-01-01'}.

\code{weekdays} is controversial but it is only a sequence of nonworking weekdays.
In the great majority of situations it refers to the weekend but it is also possible defining
it differently.
\code{weekdays} accepts a \code{character} sequence with lower case weekdays (
\code{sunday}, \code{monday}, \code{thuesday}, \code{wednesday}, \code{thursday},
\code{friday}, \code{saturday}).
This argument defaults to \code{NULL} because the default intended behavior for
\code{Calendar} returns an \emph{actual} calendar, so calling \code{Calendar(dib=365)}
returns a \emph{actual/365} calendar and \code{Calendar(dib=360)} and \emph{actual/360}
(for more calendars see \href{http://en.wikipedia.org/wiki/Day_count_convention}{Day Count Convention})
To define the weekend as the nonworking weekdays one could simply
use \code{weekdays=c("saturday", "sunday")}.

\code{dib} reffers to \emph{days in base} and represents the amount of days within a year.
That is necessary for defining Day Count Conventions and for accounting annualized periods
(see \code{\link{bizyears}}).

The arguments \code{adjust.from} and \code{adjust.to} are used to adjust \code{bizdays}' arguments
\code{from} and \code{to}, respectively.
These arguments need to be adjusted when nonworking days are provided.
The default behavior, setting \code{adjust.from=adjust.previous} and \code{adjust.to=adjust.next},
works like Excel's function NETWORKDAYS, since that is fairly used by a great number of practitioners.

\code{Calendar} doesn't have to be named, but it helps identifying the calendars once many are instantiated.
You name a \code{Calendar} by setting the argument \code{name}.
}
\examples{
data(holidaysCN)
that <- Calendar(name="CN", holidays = holidaysCN)
options(calendar=that)

# ACTUAL calendar
cal <- Calendar(name="Actual", dib=365)
# calendar default name is gregorian
cal <- Calendar(start.date="1976-07-12", end.date="2013-10-28")
is.null(cal$name) # TRUE
}

